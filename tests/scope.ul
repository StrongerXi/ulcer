// utility function
function println(x) {
  print(x);
  print("\n");
}

function getX() {
  return x;
}

function foo() {
  return getX();
}

function bar() {
  x = 5;                     // shouldn't be in scope in `getX()` call
  return getX();
}

println(foo());              // should be `null`
println(bar());              // should be `null`


function genId() {
  x = 0;
  return function(x) { 
    return x;                // should be parameter `x`, not outer `x = 0`
  };
}

println(genId()(42));        // should be 42



function funcs() {
  f = function() { x = 10; };
  g = function() { return x; };
  return [f, g];
}

arr = funcs();
println(arr[1]());           // should be `null`
arr[0]();
println(arr[1]());           // should be `null`
